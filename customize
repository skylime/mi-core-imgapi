#!/usr/bin/bash
#
# Put customizations to your image in this file.

# Custom versions and variables
PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin
SDC_IMGAPI_VERSION='20150219'

# Exit if any commands fail
set -o errexit

# Configuring image specific packages
echo "* Configuring image specific packages.";

echo "* Download and extract imgapi"
mkdir -p /opt/imgapi
curl -L https://github.com/joyent/sdc-imgapi/archive/${SDC_IMGAPI_VERSION}.tar.gz | tar xz -C /opt/imgapi --strip-components=1

echo "* Ready for docs"
curl -L https://github.com/trentm/restdown/archive/1.3.6.tar.gz | tar xz -C /opt/imgapi/deps/restdown --strip-components=1
git clone https://github.com/joyent/restdown-brand-remora.git /opt/imgapi/deps/restdown-brand-remora/

echo "* Workaround for npm install usage with git repo"
sed -i 's|ssh://git@github.com:\(.*\).git\(.*\)|https://github.com/\1\2|g' \
	/opt/imgapi/package.json

echo "* Change working directory"
cd /opt/imgapi/

echo "* Run npm install to get the requirements"
npm install

echo "* Create docs"
make docs

echo "* Install template config file"
mv /tmp/imgapi.config.tpl /opt/imgapi/etc/

echo "* Chown everything to www user"
chown -R www:www /opt/imgapi

echo "* Import imgapi manifest"
svccfg import /tmp/imgapi.xml
rm /tmp/imgapi.xml

echo "* Create nginx ssl folder"
mkdir -p /opt/local/etc/nginx/ssl

echo "* Install imgapi cli tools on the server"
npm install -g git+https://github.com/joyent/sdc-imgapi-cli.git

# Clean up
echo "* Cleaning up."
rm -rf /root/*

# Prepare image for provisioning
sm-prepare-image -y
